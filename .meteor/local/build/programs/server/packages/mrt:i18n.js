(function () {

/* Imports */
var Meteor = Package.meteor.Meteor;
var _ = Package.underscore._;

(function () {

/////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                         //
// packages/mrt:i18n/translator.js                                                         //
//                                                                                         //
/////////////////////////////////////////////////////////////////////////////////////////////
                                                                                           //
// Generated by CoffeeScript 1.4.0                                                         // 1
(function() {                                                                              // 2
  var root;                                                                                // 3
                                                                                           // 4
  Meteor._TranslatorService = (function() {                                                // 5
                                                                                           // 6
    function _TranslatorService() {                                                        // 7
      var localLocale, resolveParams, retrieveMessage,                                     // 8
        _this = this;                                                                      // 9
      resolveParams = function(message, params) {                                          // 10
        var key, regexp, value;                                                            // 11
        for (key in params) {                                                              // 12
          value = params[key];                                                             // 13
          regexp = new RegExp('\\{\\{' + key + '\\}\\}', 'g');                             // 14
          message = message.replace(regexp, value);                                        // 15
        }                                                                                  // 16
        return message;                                                                    // 17
      };                                                                                   // 18
      retrieveMessage = function(messageId) {                                              // 19
        var language, locale, message, messageParts, messages, territory, _ref;            // 20
        messageParts = messageId.split('.');                                               // 21
        messageId = messageParts.pop();                                                    // 22
        messages = Meteor.i18nMessages;                                                    // 23
        while (messageParts.length) {                                                      // 24
          messages = messages[messageParts.shift()];                                       // 25
          if (!_.isObject(messages)) {                                                     // 26
            throw Error('_meteor.translator.missingMessageNamespace');                     // 27
          }                                                                                // 28
        }                                                                                  // 29
        message = messages[messageId];                                                     // 30
        if (message == null) {                                                             // 31
          throw Error('_meteor.translator.missingMessage');                                // 32
        }                                                                                  // 33
        if (_.isString(message)) {                                                         // 34
          return message;                                                                  // 35
        }                                                                                  // 36
        locale = Session.get('_TranslatorService.locale') || 'en_US';                      // 37
        _ref = locale.split('_'), language = _ref[0], territory = _ref[1];                 // 38
        message = message[language];                                                       // 39
        if (_.isString(message)) {                                                         // 40
          return message;                                                                  // 41
        }                                                                                  // 42
        if (_.isString(message != null ? message[territory] : void 0)) {                   // 43
          return message[territory];                                                       // 44
        }                                                                                  // 45
        if (_.isString(message != null ? message["default"] : void 0)) {                   // 46
          return message["default"];                                                       // 47
        }                                                                                  // 48
        throw Error('_meteor.translator.unknownMessageFormat');                            // 49
      };                                                                                   // 50
      this.translate = function(messageId, params) {                                       // 51
        var errorMessage, errorMessageId, message;                                         // 52
        if (params == null) {                                                              // 53
          params = {};                                                                     // 54
        }                                                                                  // 55
        try {                                                                              // 56
          message = retrieveMessage(messageId);                                            // 57
          return resolveParams(message, params);                                           // 58
        } catch (translationError) {                                                       // 59
          errorMessageId = translationError.message;                                       // 60
          errorMessage = (function() {                                                     // 61
            try {                                                                          // 62
              return resolveParams(retrieveMessage(errorMessageId), {                      // 63
                messageId: messageId                                                       // 64
              });                                                                          // 65
            } catch (e) {                                                                  // 66
              return ("Translation Error: Cannot resolve error\nmessage '" + errorMessageId + "' while translating '" + messageId + "'").replace(/\n/, ' ');
            }                                                                              // 68
          })();                                                                            // 69
          console.log(errorMessage);                                                       // 70
          return '###' + messageId + '###';                                                // 71
        }                                                                                  // 72
      };                                                                                   // 73
      if (Meteor.isClient) {                                                               // 74
        localLocale = window.localStorage.getItem('_TranslatorService.locale');            // 75
        if (localLocale) {                                                                 // 76
          Meteor.setLocale(localLocale);                                                   // 77
        }                                                                                  // 78
      }                                                                                    // 79
    }                                                                                      // 80
                                                                                           // 81
    return _TranslatorService;                                                             // 82
                                                                                           // 83
  })();                                                                                    // 84
                                                                                           // 85
  Meteor.setLocale = function(locale) {                                                    // 86
    if (Meteor.isClient) {                                                                 // 87
      window.localStorage.setItem('_TranslatorService.locale', locale);                    // 88
    }                                                                                      // 89
    return Session.set('_TranslatorService.locale', locale);                               // 90
  };                                                                                       // 91
                                                                                           // 92
  Meteor.getLocale = function() {                                                          // 93
    return Session.get('_TranslatorService.locale');                                       // 94
  };                                                                                       // 95
                                                                                           // 96
  Meteor._TranslatorService = new Meteor._TranslatorService();                             // 97
                                                                                           // 98
  if (Meteor.i18nMessages == null) {                                                       // 99
    Meteor.i18nMessages = {};                                                              // 100
  }                                                                                        // 101
                                                                                           // 102
  if (Meteor.i18nMessages._meteor == null) {                                               // 103
    Meteor.i18nMessages._meteor = {};                                                      // 104
  }                                                                                        // 105
                                                                                           // 106
  Meteor.i18nMessages._meteor.translator = {                                               // 107
    missingMessageNamespace: "Translation error: The message namespace of \"{{messageId}}\" cannot\nbe resolved.".replace(/\n/, ' '),
    missingMessage: "Translation error: The translation message \"{{messageId}}\" is\nmissing in its message namespace.".replace(/\n/, ' '),
    unknownMessageFormat: 'Translation error: Unknown message format for "{{messageId}}".' // 110
  };                                                                                       // 111
                                                                                           // 112
  root = typeof exports !== "undefined" && exports !== null ? exports : this;              // 113
                                                                                           // 114
  root.__ = Meteor._TranslatorService.translate;                                           // 115
                                                                                           // 116
}).call(this);                                                                             // 117
                                                                                           // 118
/////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);


/* Exports */
if (typeof Package === 'undefined') Package = {};
Package['mrt:i18n'] = {};

})();

//# sourceMappingURL=mrt:i18n.js.map
