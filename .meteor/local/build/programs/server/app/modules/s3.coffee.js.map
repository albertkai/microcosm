{"version":3,"file":"/modules/s3.coffee.js","sources":["s3.coffee"],"names":[],"mappings":"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","sourcesContent":["if Meteor.isServer\n\n  Meteor.methods {\n\n    uploadPic: (pic)->\n\n      s3 = new AWS.S3()\n\n      buffer = new Buffer(pic.data, 'binary')\n\n      newName = do ->\n        extention = _.last pic.name.split('.')\n        randomName = Random.id()\n        randomName + '.' + extention\n\n      origImage =  {\n        Key: 'user_media/' + newName\n        ContentType: pic.type\n        Body: buffer\n        Bucket: 'microcosm'\n      }\n\n      f = new Future()\n\n      s3.putObject origImage, (err, data)->\n        if err\n          console.log err\n          f.return(false)\n        else\n          console.log 'object ' + pic.name + ' with new name ' + newName + ' uploaded to S3! Congrats!'\n          f.return(newName)\n\n      f.wait()\n\n    uploadWithThumb: (pics)->\n\n      s3 = new AWS.S3()\n\n      origBuffer = new Buffer(pics[0].data, 'binary')\n\n      resizedBuffer = new Buffer(pics[1].data, 'binary')\n\n      newName = do ->\n        extention = _.last pics[0].fileInfo.name.split('.')\n        randomName = Random.id()\n        {\n        orig: randomName + '.' + extention\n        thumb: randomName + '_thumb.' + extention\n        }\n\n\n      origImage =  {\n        Key: newName.orig\n        ContentType: pics[0].fileInfo.type\n        Body: origBuffer\n        Bucket: 'microcosm'\n      }\n\n      resizedImage =  {\n        Key: newName.thumb\n        ContentType: pics[0].fileInfo.type\n        Body: resizedBuffer\n        Bucket: 'microcosm'\n      }\n\n      f = new Future()\n\n      s3.putObject origImage, (err, data)->\n        if err\n          console.log err\n          f.return(false)\n        else\n          console.log 'object ' + pics[0].fileInfo.name + 'named ' + newName.orig + ' uploaded to S3! Congrats!'\n          f.return(true)\n\n      f.wait()\n\n      f = new Future()\n\n      s3.putObject resizedImage, (err, data)->\n        if err\n          console.log err\n          f.return(false)\n        else\n          console.log 'object ' + pics[1].fileInfo.name + ' thumb named' + newName.thumb + 'uploaded to S3'\n          f.return(true)\n\n      f.wait()\n\n      newName.orig\n\n    deletePic: (pic)->\n\n      s3 = new AWS.S3()\n\n      params = {\n        Bucket: 'microcosm'\n        Key: 'user_media/' + pic\n      }\n\n      f = new Future()\n\n      s3.deleteObject params, (err, data)->\n        if (err)\n          console.log(err, err.stack)\n          f.return(false)\n        else\n          console.log('object ' + pic + ' deleted from S3')\n          f.return(true)\n\n      f.wait()\n\n\n    deletePics: (pics)->\n\n      if pics.length > 0\n\n        s3 = new AWS.S3()\n\n        params = {\n          Bucket: 'microcosm',\n          Delete: {\n            Objects: []\n          }\n        }\n\n        pics.forEach (pic)->\n          obj = {}\n          obj['Key'] = pic\n          params.Delete.Objects.push obj\n\n        f = new Future()\n\n        s3.deleteObjects params, (err, data)->\n          if (err)\n            console.log(err, err.stack)\n            f.return(false)\n          else\n            console.log('object ' + pics + ' deleted from S3')\n            f.return(true)\n\n        f.wait()\n\n      else\n\n        console.log 'no pics to delete'\n\n        true\n\n  }\n\nif Meteor.isClient\n\n  @Media = {\n\n    uploadPic: (e, pic, file, callback)->\n\n      Meteor.call 'uploadPic', pic, (err, res)->\n        if err\n          MainCtrl.hideLoader()\n          MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n        else\n          if res\n            callback(res)\n          else\n            MainCtrl.hideLoader()\n            MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n    updatePic: (e, pic, file, currentPic, callback)->\n\n      Meteor.call 'deletePic', currentPic, (err, res)->\n\n        if err\n\n          MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n        else\n\n          if res\n\n            Media.uploadPic(e, pic, file, callback)\n\n          else\n\n            MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n    resizeAndUpload: (id, file, width, height)->\n\n      log 'triggered upload with resize'\n\n      pic = {}\n      resizedPic = {}\n\n      deferred = $.Deferred()\n\n      resize = ()->\n        reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onLoad = (e)->\n          $.canvasResize(file, {\n            width: width,\n            height: height,\n            crop: false,\n            quality: 80,\n            callback: (data)->\n              deferred.resolve(data)\n              console.log {data: data}\n          })\n        deferred.promise()\n\n\n      originalFile = ()->\n        reader = new FileReader()\n        deferred = $.Deferred()\n        reader.readAsBinaryString(file)\n        reader.onload = (e)->\n          ifile = reader.result\n          deferred.resolve(ifile)\n          console.log {reader: ifile}\n        deferred.promise()\n\n\n\n      $.when(originalFile(), resize()).done (ifile, resizedFile)=>\n        console.log 'resolved'\n        pic['fileInfo'] = file\n        pic['data'] = ifile\n        resizedPic['fileInfo'] = file\n        resizedPic['data'] = resizedFile\n        console.log pic\n        console.log resizedPic\n        Meteor.call 'uploadWithThumb', [pic, resizedPic], (err, res)->\n          if err\n\n            MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n          else\n\n            if res\n\n              console.log res\n\n              Gallery.update id, {$push: {'images': res}}, ->\n\n                MainCtrl.notify 'Изображение ' + res + ' добавлено!', 'success'\n\n                MainCtrl.hideLoader()\n\n            else\n\n              MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n    deletePic: (pic)->\n\n      Meteor.call 'deletePic', pic, (err, res)->\n\n        if err\n\n          MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n        else\n\n          if res\n\n            MainCtrl.notify 'Изображение успешно удалено!', 'success'\n\n          else\n\n            MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n    deletePics: (pics)->\n\n      Meteor.call 'deletePics', pics, (err, res)->\n\n        if err\n\n          MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n        else\n\n          if res\n\n            MainCtrl.notify 'Изображения успешно удалено!', 'success'\n\n          else\n\n            MainCtrl.notify('Ошибка сервера, пожалуйста попробуйте позже!', 'error')\n\n  }"]}