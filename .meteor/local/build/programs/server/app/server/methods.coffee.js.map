{"version":3,"file":"/server/methods.coffee.js","sources":["methods.coffee"],"names":[],"mappings":";AACA,MAAM,CAAC,OAAP,CAAe;EAEb,WAAW;WAET,IAAI,CAAC,SAAL,GAFS;GAFE;EAOb,cAAc,SAAC,IAAD,EAAO,GAAP,EAAY,GAAZ;AAEZ;WAAO,QAAQ,CAAC,WAAhB;IAEA,QAAQ,CAAC,iBAAT,CAA2B,IAAI,CAAC,SAAL,GAAiB,UAA5C,CAFA;IAIA,SAAS,KAAK,CAAC,OAAN,CAAc,SAAC,IAAD;AAErB;kBAAY,EAAZ;MAEA,QAAQ,CAAC,iBAAT,CAA2B,IAAI,CAAC,IAAhC,EAAsC,IAAI,CAAC,KAA3C,EAAkD,IAAI,CAAC,GAAvD,EAA4D,IAAI,CAAC,IAAjE,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,IAAI,CAAC,QAAlF,EAA4F,SAAC,MAAD;eAC1F,QAAQ,CAAC,UAAT,CAAoB,MAAM,CAAC,IAA3B,EAAiC,MAAM,CAAC,KAAxC,EAA+C,MAAM,CAAC,GAAtD,EAA2D,MAAM,CAAC,IAAlE,EAAwE,QAAQ,CAAC,WAAjF,EAA8F,SAAC,SAAD;AAC5F,iBAAO,CAAC,GAAR,CAAY,yBAAZ,EAAuC,SAAvC;UACA,QAAQ,CAAC,WAAT,CAAqB,SAArB,EAAgC,QAAQ,CAAC,MAAzC,EAAiD,IAAjD,EAAuD,SAAC,IAAD;mBACrD,SAAU,OAAV,GAAmB,KADkC;WAAvD,CADA;UAGA,QAAQ,CAAC,WAAT,CAAqB,SAArB,EAAgC,QAAQ,CAAC,OAAzC,EAAkD,IAAlD,EAAwD,SAAC,IAAD;mBACtD,SAAU,QAAV,GAAoB,KADkC;WAAxD,CAHA;iBAKA,QAAQ,CAAC,UAAT,CAAoB,SAApB,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,SAAC,IAAD;mBAC5C,SAAU,UAAV,GAAsB,KADsB;WAA9C,EAN4F;SAA9F,EAD0F;OAA5F,CAFA;aAYA,KAAK,IAAL,EAAW,SAAX,EAdqB;KAAd,CAJT;WAoBA,MAAM,CAAC,OAtBK;GAPD;EA+Bb,WAAW,SAAC,MAAD;AAET,QAAG,MAAM,CAAC,KAAK,CAAC,IAAb,CAAkB;MAAC,YAAY,MAAb;KAAlB,CAAuC,CAAC,KAAxC,KAAkD,CAArD;aACE,MADF;;aAGE,KAHF;KAFS;GA/BE;CAAf;A","sourcesContent":["\nMeteor.methods {\n\n  getLocale: ->\n\n    i18n.getLocale()\n\n\n  getAstroData: (date, lat, lng)->\n\n    flag = swisseph.SEFLG_SPEED\n\n    swisseph.swe_set_ephe_path(path.__dirname + '/../ephe')\n\n    getEph = Async.runSync (done)->\n\n      resultObj = {}\n\n      swisseph.swe_utc_time_zone date.year, date.month, date.day, date.hour, 0, 0, date.timezone, (result)->\n        swisseph.swe_julday result.year, result.month, result.day, result.hour, swisseph.SE_GREG_CAL, (julday_ut) ->\n          console.log('Julian UT day for date:', julday_ut)\n          swisseph.swe_calc_ut julday_ut, swisseph.SE_SUN, flag, (body)->\n            resultObj['sun'] = body\n          swisseph.swe_calc_ut julday_ut, swisseph.SE_MOON, flag, (body)->\n            resultObj['moon'] = body\n          swisseph.swe_houses julday_ut, lat, lng, 'P', (body)->\n            resultObj['houses'] = body\n\n      done(null, resultObj)\n\n    getEph.result\n\n  nickCheck: (string)->\n\n    if Meteor.users.find({'nickname': string}).count() > 0\n      false\n    else\n      true\n}\n\n"]}